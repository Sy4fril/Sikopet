/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package AdminTools;

import DataAccessObject.PenggunaDAO;
import model.Pengguna;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.JButton;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableCellEditor;
import java.awt.Component;
import java.awt.Color;
import javax.swing.JTable;
import javax.swing.AbstractCellEditor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import DataAccessObject.LogAktivitasDAO;
import model.LogAktivitas;
import DataAccessObject.LingkunganDAO;
import model.Lingkungan;

/**
 *
 * @author HYPE AMD
 */
public class pnlTambahUser extends javax.swing.JPanel {

    private int selectedId = -1;
    private java.util.List<Lingkungan> listLingkungan; // simpan list lingkungan untuk mapping id

    /**
     * Creates new form pnlTambahUser
     */
    public pnlTambahUser() {
        initComponents();
        loadTablePengguna();
        loadComboRole();
        loadComboLingkungan();
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_namaPengguna = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnAddUser = new javax.swing.JButton();
        btnEditUser = new javax.swing.JButton();
        btnDeleteUser = new javax.swing.JButton();
        tbl_dataLingkungan = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnRefreshTable = new javax.swing.JButton();
        cbRoleUser = new javax.swing.JComboBox<>();
        lblTotalPengguna = new javax.swing.JLabel();
        lblPenggunaAktif = new javax.swing.JLabel();
        lblPenggunaNonaktif = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtNIKWarga = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtNomorHPWarga = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cbLingkunganWarga = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("MANAJEMEN PENGGUNA");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Nama Asli");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Username");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Email");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Password");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Role");

        btnAddUser.setBackground(new java.awt.Color(51, 255, 51));
        btnAddUser.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddUser.setText("Add");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        btnEditUser.setBackground(new java.awt.Color(255, 153, 0));
        btnEditUser.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditUser.setText("Edit");
        btnEditUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditUserActionPerformed(evt);
            }
        });

        btnDeleteUser.setBackground(new java.awt.Color(255, 51, 51));
        btnDeleteUser.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDeleteUser.setText("Delete");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_dataLingkungan.setViewportView(jTable1);

        btnRefreshTable.setBackground(new java.awt.Color(0, 153, 153));
        btnRefreshTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRefreshTable.setText("Refresh");
        btnRefreshTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshTableActionPerformed(evt);
            }
        });

        cbRoleUser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblTotalPengguna.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTotalPengguna.setText("Total Pengguna :");

        lblPenggunaAktif.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPenggunaAktif.setText("Pengguna Aktif :");

        lblPenggunaNonaktif.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPenggunaNonaktif.setText("Pengguna Nonaktif :");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("NIK");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Nomor HP");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Lingkungan");

        cbLingkunganWarga.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotalPengguna)
                            .addComponent(lblPenggunaAktif)
                            .addComponent(lblPenggunaNonaktif))
                        .addGap(705, 705, 705))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditUser, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(193, 193, 193)
                                        .addComponent(jLabel8))
                                    .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRefreshTable))
                            .addComponent(tbl_dataLingkungan, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txt_namaPengguna, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                                                .addComponent(txtUsername))
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                                                .addComponent(txtPassword)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtNIKWarga)
                                            .addComponent(txtNomorHPWarga)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel10)
                                            .addComponent(cbLingkunganWarga, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(cbRoleUser, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_namaPengguna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRoleUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNIKWarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomorHPWarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbLingkunganWarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditUser, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefreshTable, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(tbl_dataLingkungan, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotalPengguna)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPenggunaAktif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPenggunaNonaktif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loadComboRole() {
        cbRoleUser.removeAllItems();
        cbRoleUser.addItem("ketua");
        cbRoleUser.addItem("bendahara");
        cbRoleUser.addItem("warga");
    }

    private void loadTablePengguna() {
        DefaultTableModel model = new DefaultTableModel(new Object[]{"ID", "Nama", "Username", "Email", "Role", "NIK", "No HP", "Lingkungan", "Password", "Status"}, 0) {
            public boolean isCellEditable(int row, int column) {
                // Kolom status (9) bisa diedit (untuk toggle), lainnya tidak
                return column == 9;
            }
        };
        PenggunaDAO dao = new PenggunaDAO();
        DataAccessObject.WargaDAO wargaDAO = new DataAccessObject.WargaDAO();
        DataAccessObject.LingkunganDAO lingkunganDAO = new DataAccessObject.LingkunganDAO();
        java.util.List<model.Pengguna> list = dao.getAllPengguna();
        for (model.Pengguna p : list) {
            // Ambil data warga berdasarkan id pengguna
            model.Warga warga = wargaDAO.getWargaByPenggunaId(p.getId());
            String nik = warga != null ? warga.getNik() : "";
            String noHp = warga != null ? warga.getNoHp() : "";
            // Ambil nama lingkungan
            model.Lingkungan lingkungan = lingkunganDAO.getLingkunganById(p.getIdLingkungan());
            String namaLingkungan = lingkungan != null ? lingkungan.getNamaDaerah() + " (RT " + lingkungan.getRt() + "/RW " + lingkungan.getRw() + ")" : "";
            model.addRow(new Object[]{
                p.getId(),
                p.getNamaPengguna(),
                p.getUsername(),
                p.getEmail(),
                p.getRole(),
                nik,
                noHp,
                namaLingkungan,
                p.getPassword(),
                p.getStatus()
            });
        }
        jTable1.setModel(model);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        // Set custom renderer/editor untuk kolom status
        jTable1.getColumnModel().getColumn(9).setCellRenderer(new StatusButtonRenderer());
        jTable1.getColumnModel().getColumn(9).setCellEditor(new StatusButtonEditor());
        updateUserStatsLabels();
    }

    private void updateUserStatsLabels() {
        PenggunaDAO dao = new PenggunaDAO();
        int total = dao.getTotalPengguna();
        int aktif = dao.getTotalPenggunaAktif();
        int nonaktif = dao.getTotalPenggunaNonaktif();
        lblTotalPengguna.setText("Total Pengguna : " + total);
        lblPenggunaAktif.setText("Pengguna Aktif : " + aktif);
        lblPenggunaNonaktif.setText("Pengguna Nonaktif : " + nonaktif);
    }

    // Custom renderer untuk tombol status
    class StatusButtonRenderer extends JButton implements TableCellRenderer {
        public StatusButtonRenderer() {
            setOpaque(true);
            setFont(getFont().deriveFont(java.awt.Font.BOLD));
            setForeground(Color.BLACK);
        }
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            String status = value == null ? "" : value.toString();
            setText(status.equalsIgnoreCase("aktif") ? "Aktif" : "Nonaktif");
            setBackground(status.equalsIgnoreCase("aktif") ? new Color(76, 175, 80) : new Color(244, 67, 54));
            setFont(getFont().deriveFont(java.awt.Font.BOLD));
            setForeground(Color.BLACK);
            setMargin(new java.awt.Insets(2, 8, 2, 8));
            setHorizontalAlignment(CENTER);
            return this;
        }
    }

    // Custom editor untuk tombol status
    class StatusButtonEditor extends AbstractCellEditor implements TableCellEditor {
        private JButton button = new JButton();
        private String currentStatus;
        private int currentRow;
        public StatusButtonEditor() {
            button.setOpaque(true);
            button.setFont(button.getFont().deriveFont(java.awt.Font.BOLD));
            button.setForeground(Color.BLACK);
            button.setMargin(new java.awt.Insets(2, 8, 2, 8));
            button.setHorizontalAlignment(JButton.CENTER);
            button.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    fireEditingStopped();
                    toggleStatus(currentRow);
                }
            });
        }
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            currentStatus = value == null ? "" : value.toString();
            currentRow = row;
            button.setText(currentStatus.equalsIgnoreCase("aktif") ? "Aktif" : "Nonaktif");
            button.setBackground(currentStatus.equalsIgnoreCase("aktif") ? new Color(76, 175, 80) : new Color(244, 67, 54));
            button.setFont(button.getFont().deriveFont(java.awt.Font.BOLD));
            button.setForeground(Color.BLACK);
            button.setMargin(new java.awt.Insets(2, 8, 2, 8));
            button.setHorizontalAlignment(JButton.CENTER);
            return button;
        }
        public Object getCellEditorValue() {
            return currentStatus;
        }
    }

    // Fungsi untuk toggle status dengan konfirmasi
    private void toggleStatus(int row) {
        int id = Integer.parseInt(jTable1.getValueAt(row, 0).toString());
        String nama = jTable1.getValueAt(row, 1).toString();
        String username = jTable1.getValueAt(row, 2).toString();
        String statusLama = jTable1.getValueAt(row, 9).toString();
        String statusBaru = statusLama.equalsIgnoreCase("aktif") ? "nonaktif" : "aktif";
        int confirm = JOptionPane.showConfirmDialog(this, "Ubah status user '" + nama + "' menjadi '" + statusBaru + "'?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            PenggunaDAO dao = new PenggunaDAO();
            if (dao.updateStatusPengguna(id, statusBaru)) {
                JOptionPane.showMessageDialog(this, "Status berhasil diubah.");
                // Log ubah status user
                DataAccessObject.LogAktivitasDAO logDao = new DataAccessObject.LogAktivitasDAO();
                String logDesc = "Mengubah status user: " + username + " (" + nama + ") menjadi " + statusBaru;
                model.LogAktivitas log = new model.LogAktivitas(0, null, logDesc, new java.sql.Timestamp(System.currentTimeMillis()));
                logDao.insertLogAktivitas(log);
                loadTablePengguna();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal mengubah status.");
            }
        }
    }

    private void clearForm() {
        txt_namaPengguna.setText("");
        txtUsername.setText("");
        txtEmail.setText("");
        txtPassword.setText("");
        txtNIKWarga.setText("");
        txtNomorHPWarga.setText("");
        cbLingkunganWarga.setSelectedIndex(0);
        cbRoleUser.setSelectedIndex(0);
        selectedId = -1;
        jTable1.clearSelection();
        btnAddUser.setEnabled(true);
    }

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {
        int row = jTable1.getSelectedRow();
        if (row != -1) {
            selectedId = Integer.parseInt(jTable1.getValueAt(row, 0).toString());
            txt_namaPengguna.setText(jTable1.getValueAt(row, 1).toString());
            txtUsername.setText(jTable1.getValueAt(row, 2).toString());
            txtPassword.setText(jTable1.getValueAt(row, 8).toString());
            txtNomorHPWarga.setText(jTable1.getValueAt(row, 6).toString());
            txtNIKWarga.setText(jTable1.getValueAt(row, 5).toString());
            txtEmail.setText(jTable1.getValueAt(row, 3) == null ? "" : jTable1.getValueAt(row, 3).toString());
            cbRoleUser.setSelectedItem(jTable1.getValueAt(row, 4).toString());
            cbLingkunganWarga.setSelectedItem(jTable1.getValueAt(row, 7).toString());
            btnAddUser.setEnabled(false);
        }
    }

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        String nama = txt_namaPengguna.getText().trim();
        String username = txtUsername.getText().trim();
        String email = txtEmail.getText().trim();
        String password = txtPassword.getText().trim();
        String role = cbRoleUser.getSelectedItem().toString();
        String nik = txtNIKWarga.getText().trim();
        String noHp = txtNomorHPWarga.getText().trim();
        int idxLingkungan = cbLingkunganWarga.getSelectedIndex();
        if (nama.isEmpty() || username.isEmpty() || password.isEmpty() || role.isEmpty() || nik.isEmpty() || noHp.isEmpty() || idxLingkungan < 0) {
            JOptionPane.showMessageDialog(this, "Semua field wajib diisi!");
            return;
        }
        int idLingkungan = listLingkungan.get(idxLingkungan).getId();
        Pengguna p = new Pengguna(nama, username, password, role, email, idLingkungan);
        PenggunaDAO dao = new PenggunaDAO();
        boolean success = dao.insertPengguna(p);
        boolean wargaSuccess = false;
        if (success) {
            int idPenggunaBaru = dao.getLastInsertedId();
            model.Warga warga = new model.Warga(0, idPenggunaBaru, idLingkungan, nama, nik, noHp, email, "", "aktif", null);
            DataAccessObject.WargaDAO wargaDAO = new DataAccessObject.WargaDAO();
            wargaSuccess = wargaDAO.insertWarga(warga);
        }
        if (success && wargaSuccess) {
            JOptionPane.showMessageDialog(this, "User berhasil ditambahkan.");
            // Log tambah user
            DataAccessObject.LogAktivitasDAO logDao = new DataAccessObject.LogAktivitasDAO();
            String logDesc = "Menambah user baru: " + username + " (" + nama + ") dengan role " + role;
            model.LogAktivitas log = new model.LogAktivitas(0, null, logDesc, new java.sql.Timestamp(System.currentTimeMillis()));
            logDao.insertLogAktivitas(log);
            loadTablePengguna();
            clearForm();
        } else if (success && !wargaSuccess) {
            JOptionPane.showMessageDialog(this, "User berhasil ditambah ke tabel pengguna, tapi gagal menambah ke tabel warga.");
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menambah user.");
        }
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void btnEditUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditUserActionPerformed
        if (selectedId == -1) {
            JOptionPane.showMessageDialog(this, "Pilih user yang akan diedit.");
            return;
        }
        String nama = txt_namaPengguna.getText();
        String username = txtUsername.getText();
        String email = txtEmail.getText();
        String password = txtPassword.getText();
        String role = cbRoleUser.getSelectedItem().toString();
        String nik = txtNIKWarga.getText();
        String noHp = txtNomorHPWarga.getText();
        int idxLingkungan = cbLingkunganWarga.getSelectedIndex();
        if (nama.isEmpty() || username.isEmpty() || role.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama, Username, dan Role wajib diisi.");
            return;
        }
        // Jika password kosong, ambil password lama dari DB
        PenggunaDAO dao = new PenggunaDAO();
        String passToSave = password;
        if (password.isEmpty()) {
            List<Pengguna> list = dao.getAllPengguna();
            for (Pengguna p : list) {
                if (p.getId() == selectedId) {
                    passToSave = p.getPassword();
                    break;
                }
            }
        }
        int idLingkungan = listLingkungan.get(idxLingkungan).getId();
        Pengguna p = new Pengguna(selectedId, nama, username, passToSave, role, email, "aktif", idLingkungan, null);
        if (dao.updatePengguna(p)) {
            // Update data warga juga
            DataAccessObject.WargaDAO wargaDAO = new DataAccessObject.WargaDAO();
            model.Warga warga = wargaDAO.getWargaByPenggunaId(selectedId);
            if (warga != null) {
                warga.setNamaWarga(nama);
                warga.setNik(nik);
                warga.setNoHp(noHp);
                warga.setEmail(email);
                warga.setIdLingkungan(idLingkungan);
                wargaDAO.updateWarga(warga);
            }
            JOptionPane.showMessageDialog(this, "User berhasil diupdate.");
            // Log edit user
            DataAccessObject.LogAktivitasDAO logDao = new DataAccessObject.LogAktivitasDAO();
            String logDesc = "Mengedit user: " + username + " (" + nama + ") dengan role " + role;
            model.LogAktivitas log = new model.LogAktivitas(0, null, logDesc, new java.sql.Timestamp(System.currentTimeMillis()));
            logDao.insertLogAktivitas(log);
            loadTablePengguna();
            clearForm();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal update user.");
        }
    }//GEN-LAST:event_btnEditUserActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        if (selectedId == -1) {
            JOptionPane.showMessageDialog(this, "Pilih user yang akan dihapus.");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus user ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            PenggunaDAO dao = new PenggunaDAO();
            if (dao.deletePengguna(selectedId)) {
                JOptionPane.showMessageDialog(this, "User berhasil dihapus.");
                // Log hapus user
                DataAccessObject.LogAktivitasDAO logDao = new DataAccessObject.LogAktivitasDAO();
                String logDesc = "Menghapus user: " + txtUsername.getText() + " (" + txt_namaPengguna.getText() + ")";
                model.LogAktivitas log = new model.LogAktivitas(0, null, logDesc, new java.sql.Timestamp(System.currentTimeMillis()));
                logDao.insertLogAktivitas(log);
                loadTablePengguna();
                clearForm();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menghapus user.");
            }
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnRefreshTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshTableActionPerformed
        loadTablePengguna();
        clearForm();
        loadComboLingkungan(); // update data lingkungan di combobox
    }//GEN-LAST:event_btnRefreshTableActionPerformed

    private void loadComboLingkungan() {
        cbLingkunganWarga.removeAllItems();
        LingkunganDAO dao = new LingkunganDAO();
        listLingkungan = dao.getAllLingkungan();
        for (Lingkungan l : listLingkungan) {
            cbLingkunganWarga.addItem(l.getNamaDaerah() + " (RT " + l.getRt() + "/RW " + l.getRw() + ")");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnEditUser;
    private javax.swing.JButton btnRefreshTable;
    private javax.swing.JComboBox<String> cbLingkunganWarga;
    private javax.swing.JComboBox<String> cbRoleUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblPenggunaAktif;
    private javax.swing.JLabel lblPenggunaNonaktif;
    private javax.swing.JLabel lblTotalPengguna;
    private javax.swing.JScrollPane tbl_dataLingkungan;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNIKWarga;
    private javax.swing.JTextField txtNomorHPWarga;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txt_namaPengguna;
    // End of variables declaration//GEN-END:variables
}
